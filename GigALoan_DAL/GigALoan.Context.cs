//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GigALoan_DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DB_42039_gigaloanEntities : DbContext
    {
        public DB_42039_gigaloanEntities()
            : base("name=DB_42039_gigaloanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CHLD_StudentLoans> CHLD_StudentLoans { get; set; }
        public virtual DbSet<CHLD_StudentReferences> CHLD_StudentReferences { get; set; }
        public virtual DbSet<CORE_Clients> CORE_Clients { get; set; }
        public virtual DbSet<CORE_GigAlerts> CORE_GigAlerts { get; set; }
        public virtual DbSet<CORE_Gigs> CORE_Gigs { get; set; }
        public virtual DbSet<CORE_Students> CORE_Students { get; set; }
        public virtual DbSet<SPRT_Colleges> SPRT_Colleges { get; set; }
        public virtual DbSet<SPRT_GigCategories> SPRT_GigCategories { get; set; }
        public virtual DbSet<SPRT_GigTypes> SPRT_GigTypes { get; set; }
        public virtual DbSet<SPRT_LoanCompanies> SPRT_LoanCompanies { get; set; }
        public virtual DbSet<SPRT_Majors> SPRT_Majors { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int sp_AddGigAlert(Nullable<int> clientID, Nullable<int> typeID, string title, string comment, Nullable<double> paymentAmt, Nullable<double> @long, Nullable<double> lat)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var paymentAmtParameter = paymentAmt.HasValue ?
                new ObjectParameter("PaymentAmt", paymentAmt) :
                new ObjectParameter("PaymentAmt", typeof(double));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("Long", @long) :
                new ObjectParameter("Long", typeof(double));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("Lat", lat) :
                new ObjectParameter("Lat", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddGigAlert", clientIDParameter, typeIDParameter, titleParameter, commentParameter, paymentAmtParameter, longParameter, latParameter);
        }
    
        public virtual ObjectResult<sp_GetGigTypes_Result> sp_GetGigTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetGigTypes_Result>("sp_GetGigTypes");
        }
    
        public virtual ObjectResult<sp_GetGigTypesByID_Result> sp_GetGigTypesByID(Nullable<int> typeID)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("TypeID", typeID) :
                new ObjectParameter("TypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetGigTypesByID_Result>("sp_GetGigTypesByID", typeIDParameter);
        }
    }
}
